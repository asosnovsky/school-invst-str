filter(n>0) %>%
arrange(desc(r))
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "n", "A", "r")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
fullData <- mutate(fullData, Name = fullName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
View(fullData)
colnames(partData) = c("ID", "n", "A", "r*","r")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "n", "A", "r*","r")
colnames(partData)
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "n", "A", "r")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
partData$ID
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "n", "A", "r")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "n", "A", "r")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
fullData <- mutate(fullData, Name = fullName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
View(partData)
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "n", "A", "r")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "n", "A", "r")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
fullData <- mutate(fullData, Name = fullName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
View(partData)
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "n", "A", "r")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )%>%
filter(n>0) %>%
arrange(desc(r))
View(partData)
prezPD <- partData[,c("Name","n","A","r")]
View(prezPD)
colnames(prezPD)
colnames(prezPD) <- c("Name","Number of Students","Total Amount Invested","Increase in Poverty Allevation (ROI)")
View(prezPD)
write.csv(prezPD,"Final-Data/Top-20-Schools.csv")
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/filtered/")[grepl('cleaned-data.csv',dir("Analyzed-Data/filtered/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "tot"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/filtered/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/filtered/")[grepl('cleaned-data.csv',dir("Analyzed-Data/filtered/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "tot"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/filtered/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/sensitivity_analysis/one_std/")){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/sensitivity_analysis/one_std/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == gsub('\\[|\\]|\'','',school$Name)),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*(IP-OP)),g=go-GR/phi,
UNAME= paste(INSTNM,' (',UNITID,')'))
)
cls=rbind(cls,
cbind(
tmp1[,c('UNAME','g','delta','phi','Tui','R')])
)
}
if(name != "tot") {
chosen = rbind(chosen, cls[!is.na(cls[,3]),])
} else {
chosen <- mutate(chosen, ID = 1:length(UNAME))
cls <- mutate(cls[!is.na(cls[,3]),], ID = 1:length(UNAME))
write.csv(apply(chosen[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/one_std/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/one_std/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/one_std/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/one_std/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
rm(list=c("Uo","go","tmp1","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/filtered/")[grepl('cleaned-data.csv',dir("Analyzed-Data/filtered/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "tot"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/filtered/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/sensitivity_analysis/one_std/")){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/sensitivity_analysis/one_std/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == gsub('\\[|\\]|\'','',school$Name)),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*(IP-OP)),g=go-GR/phi,
UNAME= paste(INSTNM,' (',UNITID,')'))
)
cls=rbind(cls,
cbind(
tmp1[,c('UNAME','g','delta','phi','Tui','R')])
)
}
if(name != "tot") {
chosen = rbind(chosen, cls[!is.na(cls[,3]),])
} else {
chosen <- mutate(chosen, ID = 1:length(UNAME))
cls <- mutate(cls[!is.na(cls[,3]),], ID = 1:length(UNAME))
write.csv(apply(chosen[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/one_std/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/one_std/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/one_std/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/one_std/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
rm(list=c("Uo","go","tmp1","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/filtered/")[grepl('cleaned-data.csv',dir("Analyzed-Data/filtered/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "tot"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/filtered/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/sensitivity_analysis/two_std/")){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/sensitivity_analysis/two_std/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == gsub('\\[|\\]|\'','',school$Name)),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*(IP-OP)),g=go-GR/phi,
UNAME= paste(INSTNM,' (',UNITID,')'))
)
cls=rbind(cls,
cbind(
tmp1[,c('UNAME','g','delta','phi','Tui','R')])
)
}
if(name != "tot") {
chosen = rbind(chosen, cls[!is.na(cls[,3]),])
} else {
chosen <- mutate(chosen, ID = 1:length(UNAME))
cls <- mutate(cls[!is.na(cls[,3]),], ID = 1:length(UNAME))
write.csv(apply(chosen[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/two_std/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/two_std/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/two_std/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/two_std/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
rm(list=c("Uo","go","tmp1","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/benchmarks")){
name <- gsub('-cleaned-data-top10.csv','',data);
if(name=='4'){
name <- "tot"
}
tmp0 <- read.csv(paste0("Analyzed-Data/benchmarks/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[name]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(name)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/filtered/")[grepl('cleaned-data.csv',dir("Analyzed-Data/filtered/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "tot"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/filtered/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/sensitivity_analysis/three_std/")){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/sensitivity_analysis/three_std/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == gsub('\\[|\\]|\'','',school$Name)),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*(IP-OP)),g=go-GR/phi,
UNAME= paste(INSTNM,' (',UNITID,')'))
)
cls=rbind(cls,
cbind(
tmp1[,c('UNAME','g','delta','phi','Tui','R')])
)
}
if(name != "tot") {
chosen = rbind(chosen, cls[!is.na(cls[,3]),])
} else {
chosen <- mutate(chosen, ID = 1:length(UNAME))
cls <- mutate(cls[!is.na(cls[,3]),], ID = 1:length(UNAME))
write.csv(apply(chosen[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/three_std/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/three_std/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:7],2,as.numeric),
"Matlab-Ready-Data/sensitivity_analysis/three_std/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","UNAME")],
"Matlab-Ready-Data/sensitivity_analysis/three_std/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
rm(list=c("Uo","go","tmp1","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
require('plyr')
setwd("C:/Github/school-invst-str/Code")
dic   <- (read.csv("Analyzed-Data/NEW-DIC-AN.csv",stringsAsFactors=FALSE)[,c(1,3)])
scard <- read.csv( "Contest-Data/collegescorecard_data.csv",stringsAsFactors=FALSE)
poor_students <- read.csv("Analyzed-Data/poor_prop_per_uni.csv")[,2:3]
dic   <- (read.csv("Analyzed-Data/filtered/NEW-DIC-AN.csv",stringsAsFactors=FALSE)[,c(1,3)])
poor_students <- read.csv("Analyzed-Data/misc/poor_prop_per_uni.csv")[,2:3]
Info = ((scard[,dic[dic[,2]==1,1]]))
VARs = ((scard[,dic[dic[,2]==2,1]]))
( suppressWarnings(VARs <- apply(VARs,2,as.numeric)) )
Prec = ((scard[,dic[dic[,2]==3,1]]))
( suppressWarnings(Prec <- apply(Prec,2,as.numeric)) )
sData <- cbind(Info[,!grepl("CONTROL|LOCALE|DISTANCEONLY|CITY",names(Info))],VARs)
sData <- merge(sData,poor_students)
sData <- mutate(sData, GG_NO_re=(1-gt_25k_p6)-POOR_Prop)
View(sData)
View(sData[,c("Name","GG_NO_re")])
names(sData)
names(sData)[1:5]
View(sData[,c("INSTNM","GG_NO_re")])
sData <- mutate(sData, GG_NO_re=POOR_Prop-(1-gt_25k_p6))
View(sData[,c("INSTNM","GG_NO_re")])
sData <- mutate(sData, GG_NO_re=(POOR_Prop-(1-gt_25k_p6))/POOR_Prop)
View(sData[,c("INSTNM","GG_NO_re")])
rm(list=ls())
require('dplyr')
require('plyr')
setwd("C:/Github/school-invst-str/Code")
#Rating	Type
#0	None
#1	Informaive
#2	Variable
#3	Prcentile
dic   <- (read.csv("Analyzed-Data/filtered/NEW-DIC-AN.csv",stringsAsFactors=FALSE)[,c(1,3)])
scard <- read.csv( "Contest-Data/collegescorecard_data.csv",stringsAsFactors=FALSE)
poor_students <- read.csv("Analyzed-Data/misc/poor_prop_per_uni.csv")[,2:3]
Info = ((scard[,dic[dic[,2]==1,1]]))
VARs = ((scard[,dic[dic[,2]==2,1]]))
( suppressWarnings(VARs <- apply(VARs,2,as.numeric)) )
Prec = ((scard[,dic[dic[,2]==3,1]]))
( suppressWarnings(Prec <- apply(Prec,2,as.numeric)) )
sData <- cbind(Info[,!grepl("CONTROL|LOCALE|DISTANCEONLY|CITY",names(Info))],VARs)
#Merge
sData <- merge(sData,poor_students)
#IPEDS
ipeds.fin <- read.csv("Contest-Data/ipeds/finance.csv",stringsAsFactors=FALSE)
ipeds.fin <- (mutate(ipeds.fin, Tot_Grant=F1E01+F1E02+F1E05+F1E06))
sData <- merge(sData,ipeds.fin[,c(1,length(ipeds.fin))])
ipeds.msc <- read.csv("Contest-Data/ipeds/misc.csv",stringsAsFactors=FALSE)
ipeds.msc <- ipeds.msc[,grepl('NPT41|UNITID',names(ipeds.msc))]
suppressWarnings( ipeds.msc <- apply(ipeds.msc,2, as.numeric) )
ipeds.msc <- cbind(ipeds.msc[,1],apply(ipeds.msc[,2:length(names(ipeds.msc))],1,sum))
colnames(ipeds.msc) <- c("UNITID","Avg_Income_Low")
ipeds.msc <- as.data.frame(ipeds.msc);
sData <- merge(sData,ipeds.msc);
ipeds.tot <- read.csv("Contest-Data/ipeds/total_students.csv",stringsAsFactors=FALSE)
names(ipeds.tot) <- c("UNITID","Tot_Students")
sData <- merge(sData,ddply(ipeds.tot,"UNITID",numcolwise(max)))
#Compute Rank
sData <- mutate(sData, GG_NO_re=(POOR_Prop-(1-gt_25k_p6))/POOR_Prop)
#Ensure only needed vars are kept
sData <- sData[!is.na(sData$GG_NO_re),]
sData <- sData[!is.na(sData$Avg_Income_Low),]
sData <- sData[!is.na(sData$Tot_Grant),]
sData <- sData[!is.na(sData$Tot_Students),]
#Filtering
sData <- filter(sData,CURROPER>0 & RELAFFIL >0) #Omit Inactive unis
sData <- sData[!apply(sData[,names(Info)[!grepl("CONTROL|LOCALE|DISTANCEONLY|CITY|UNITID|INSTNM|PREDDEG|CURROPER|RELAFFIL",names(Info))]]>0,1,any),];
sData <- sData[,!grepl(paste(names(Info)[!grepl("INSTNM|UNITID|PREDDEG",names(Info))],sep='',collapse = '|'),names(sData))]
sData <- sData[,!grepl("CURROPER|RELAFFIL|HCM2",names(sData))]
#Split by Degree
spD <- split(sData,sData$PREDDEG)
omitMe <- function(DD,BY=2) apply(DD,BY,function(x) sum(is.na(x))/length(x) )
for(name in names(spD)) {
spD[[name]] = spD[[name]][,as.logical(omitMe(spD[[name]]) < 0.5)]
spD[[name]] = spD[[name]][as.logical(omitMe(spD[[name]],1) == 0),]
write.csv(arrange(spD[[name]][,!grepl("PREDDEG",colnames(spD[[name]]))],desc(GG_NO_re)),paste0('Analyzed-Data/',name,'-cleaned-data.csv'),row.names=FALSE)
}
sData = sData[,as.logical(omitMe(sData) < 0.5)]
sData = sData[as.logical(omitMe(sData,1) == 0),]
write.csv(sData,'Analyzed-Data/Tot-cleaned-data.csv',row.names=FALSE)
View(spD[[name]][,c("INSTNM","GG_NO_re")])
name
View(spD[["2"]][,c("INSTNM","GG_NO_re")])
View(spD[["1"]][,c("INSTNM","GG_NO_re")])
