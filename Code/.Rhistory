cls=rbind(cls,
cbind(
tmp0[scID,]$Class,tmp1[,c('UNITID','g','delta','phi')])
)
}
colnames(cls)[1:2] <- c("Class","ID")
tmp0[scID,]
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
View(cls)
colnames(cls)[1] <- c("Name")
cls <- mutate(cls, ID=1:length(Name))
View(cls)
paste0('Matlab-Ready-Data/',name,'.data.csv'),
write.csv(apply(cls[,2:5],2,as.numeric),
paste0('Matlab-Ready-Data/',name,'.data.csv'),
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
paste0('Matlab-Ready-Data/',name,'.names.csv'),
row.names = FALSE)
top10 <- list()
for(data in dir("Analyzed-Data/")[grepl("(cleaned-data-top10)",dir("Analyzed-Data/"))]){
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[gsub('-cleaned-data-top10.csv','',data)]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/")[grepl('cleaned-data.csv',dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "4"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- list()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
cls <- mutate(cls, ID=1:length(Name))
write.csv(apply(cls[,2:5],2,as.numeric),
paste0('Matlab-Ready-Data/',name,'.data.csv'),
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
paste0('Matlab-Ready-Data/',name,'.names.csv'),
row.names = FALSE)
rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/")[grepl("(cleaned-data-top10)",dir("Analyzed-Data/"))]){
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[gsub('-cleaned-data-top10.csv','',data)]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/")[grepl('cleaned-data.csv',dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "4"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- list()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
cls <- mutate(cls, ID=1:length(Name))
write.csv(apply(cls[,2:5],2,as.numeric),
paste0('Matlab-Ready-Data/',name,'.data.csv'),
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
paste0('Matlab-Ready-Data/',name,'.names.csv'),
row.names = FALSE)
rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/")[grepl("(cleaned-data-top10)",dir("Analyzed-Data/"))]){
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[gsub('-cleaned-data-top10.csv','',data)]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/")[grepl('cleaned-data.csv',dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "4"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
if(data != "4") {
chosen = rbind(chosen, cls)
} else {
chosen <- mutate(chosen, ID = 1:length(Name))
cls <- mutate(cls, ID = 1:length(Name))
write.csv(apply(chosen[,2:5],2,as.numeric),
"Matlab-Ready-Data/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","Name")],
"Matlab-Ready-Data/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:5],2,as.numeric),
"Matlab-Ready-Data/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
"Matlab-Ready-Data/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
View(chosen)
chosen <- c()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
if(data != "4") {
chosen = rbind(chosen, cls)
} else {
chosen <- mutate(chosen, ID = 1:length(Name))
cls <- mutate(cls, ID = 1:length(Name))
write.csv(apply(chosen[,2:5],2,as.numeric),
"Matlab-Ready-Data/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","Name")],
"Matlab-Ready-Data/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:5],2,as.numeric),
"Matlab-Ready-Data/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
"Matlab-Ready-Data/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
#rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
data
name
chosen <- c()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
if(name != "4") {
chosen = rbind(chosen, cls)
} else {
chosen <- mutate(chosen, ID = 1:length(Name))
cls <- mutate(cls, ID = 1:length(Name))
write.csv(apply(chosen[,2:5],2,as.numeric),
"Matlab-Ready-Data/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","Name")],
"Matlab-Ready-Data/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:5],2,as.numeric),
"Matlab-Ready-Data/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
"Matlab-Ready-Data/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
#rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
dir("Maximized-Data")
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
dir("Maximized-Data")
partData <- read.csv("Maximized-Data/partitioned.csv");
dir("Matlab-Ready-Data")
partName <- read.csv("Maximized-Data/parted.name.csv");
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partName[,1]
partName[1,1]
partName[1,]
test <- mutate(partData, Name = partName[whic(partName[,1]==ID),2])
test <- mutate(partData, Name = partName[which(partName[,1]==ID),2])
partData[,1]
partData[1,]
colnames(partData)
colnames(partData) = c("ID", "A")
test <- mutate(partData, Name = partName[which(partName[,1]==ID),2])
test <- mutate(partData, Name = partName[partName[,1]==ID,2])
partName[,1]==partData$ID
apply(partData$ID,1,function(x) which(x==partName[,1]) )
sapply(partData$ID,function(x) which(x==partName[,1]) )
partName[partData$ID,]
partName[partData$ID,2]
test <- mutate(partData, Name = partName[ID,2] )
View(test)
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "A")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "A")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
partData <- mutate(fullData, Name = fullName[ID,2] )
View(fullData)
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "A")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "A")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
fullData <- mutate(fullData, Name = fullName[ID,2] )
View(fullData)
chosen <- c()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
if(name != "4") {
chosen = rbind(chosen, cls)
} else {
chosen <- mutate(chosen, ID = 1:length(Name))
cls <- mutate(cls, ID = 1:length(Name))
write.csv(apply(chosen[,2:5],2,as.numeric),
"Matlab-Ready-Data/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","Name")],
"Matlab-Ready-Data/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:5],2,as.numeric),
"Matlab-Ready-Data/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
"Matlab-Ready-Data/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
#rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
top10 <- list()
for(data in dir("Analyzed-Data/")[grepl("(cleaned-data-top10)",dir("Analyzed-Data/"))]){
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
tmp0 <- mutate(tmp0, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
tmp0 <- tmp0[,length(tmp0[1,])-(5:0)]
top10[[gsub('-cleaned-data-top10.csv','',data)]] <- mutate(tmp0,delta=1/(phi*(IP-OP)*Tui))
#GC
rm(tmp0)
rm(data)
}
orig <- list()
for(data in dir("Analyzed-Data/")[grepl('cleaned-data.csv',dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data.csv','',data);
if(name=='Tot'){
name <- "4"
}
orig[[name]] <- read.csv(paste0('Analyzed-Data/',data),stringsAsFactors = FALSE)
rm(data)
rm(name)
}
chosen <- c()
for(data in dir("Analyzed-Data/")[grepl("-cleaned-data-chosen.csv",dir("Analyzed-Data/"))]){
name <- gsub('-cleaned-data-chosen.csv','',data);
tmp0 <- read.csv(paste0("Analyzed-Data/",data),stringsAsFactors = FALSE);
cls = c()
for(scID in 1:length(tmp0[,1])){
school = tmp0[scID,]
tmp1 = orig[[name]][which(orig[[name]][,2] == school$Name),]
tmp1 <- mutate(tmp1, IP=POOR_Prop, OP=1-gt_25k_p6,
Tui=Avg_Income_Low, phi=Tot_Students,
GR=Tot_Grant, R=GG_NO_re)
Uo <- top10[[name]][school$Class+1,]
go <- Uo$GR/Uo$phi
suppressWarnings(
tmp1 <- mutate(tmp1, delta=1/(phi*Tui*(IP-OP)),g=go-GR/phi)
)
tmp1[is.na(tmp1)] = Inf
cls=rbind(cls,
cbind(
tmp0[scID,]$Name,tmp1[,c('g','delta','phi')])
)
}
colnames(cls)[1] <- c("Name")
if(name != "4") {
chosen = rbind(chosen, cls)
} else {
chosen <- mutate(chosen, ID = 1:length(Name))
cls <- mutate(cls, ID = 1:length(Name))
write.csv(apply(chosen[,2:5],2,as.numeric),
"Matlab-Ready-Data/parted.data.csv",
row.names = FALSE)
write.csv(chosen[,c("ID","Name")],
"Matlab-Ready-Data/parted.name.csv",
row.names = FALSE)
write.csv(apply(cls[,2:5],2,as.numeric),
"Matlab-Ready-Data/full.data.csv",
row.names = FALSE)
write.csv(cls[,c("ID","Name")],
"Matlab-Ready-Data/full.name.csv",
row.names = FALSE)
}
#write.csv(apply(cls[,2:5],2,as.numeric),
#          paste0('Matlab-Ready-Data/',name,'.data.csv'),
#          row.names = FALSE)
#write.csv(cls[,c("ID","Name")],
#          paste0('Matlab-Ready-Data/',name,'.names.csv'),
#          row.names = FALSE)
#rm(list=c("Uo","go","tmp1","cls","school","name","tmp0","data","scID"))
}
rm(list=ls())
require('dplyr')
setwd("C:/Github/school-invst-str/Code")
partData <- read.csv("Maximized-Data/partitioned.csv");
colnames(partData) = c("ID", "A")
partName <- read.csv("Matlab-Ready-Data/parted.name.csv");
partData <- mutate(partData, Name = partName[ID,2] )
fullData <- read.csv("Maximized-Data/full.csv");
colnames(fullData) = c("ID", "A")
fullName <- read.csv("Matlab-Ready-Data/full.name.csv");
fullData <- mutate(fullData, Name = fullName[ID,2] )
View(fullData)
